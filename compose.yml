version: "3.9"
services:
  web:
    build: { context: ., dockerfile: docker/Dockerfile.dev }
    env_file: .env
    command: bash docker/entrypoint.sh
    ports: [ "8000:8000" ]
    depends_on: [ db, redis, minio, clamav ]
    volumes: [ .:/app ]
    extra_hosts: [ "host.docker.internal:host-gateway" ]
  worker:
    build: { context: ., dockerfile: docker/Dockerfile.dev }
    env_file: .env
    command: celery -A medicab worker -l INFO
    depends_on: [ web, db, redis, minio ]
    volumes: [ .:/app ]
  beat:
    build: { context: ., dockerfile: docker/Dockerfile.dev }
    env_file: .env
    command: celery -A medicab beat -l INFO
    depends_on: [ web, db, redis ]
    volumes: [ .:/app ]
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes: [ pgdata:/var/lib/postgresql/data ]
    ports: [ "5432:5432" ]
  redis:
    image: redis:7-alpine
    ports: [ "6379:6379" ]
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    env_file: .env
    ports: [ "9000:9000", "9001:9001" ]
    volumes: [ minio:/data ]
  minio-setup:
    image: minio/mc
    depends_on: [ minio ]
    env_file: .env
    entrypoint: ["/bin/sh","/scripts/create_minio_buckets.sh"]
    volumes:
      - ./scripts/create_minio_buckets.sh:/scripts/create_minio_buckets.sh:ro
  clamav:
    image: clamav/clamav:stable
    ports: [ "3310:3310" ]
    healthcheck: { test: ["CMD","clamdscan","--version"] }
  ollama:
    image: ollama/ollama:latest
    environment: [ "OLLAMA_KEEP_ALIVE=24h" ]
    volumes: [ ollama:/root/.ollama ]
    ports: [ "11434:11434" ]
volumes: { pgdata: {}, minio: {}, ollama: {} }
